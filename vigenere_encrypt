#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include <ctype.h>
#define MAXN 1024

char * vigenere_encrypt(char* plaintext, char* key){
    int text_length = strlen(plaintext);
    int key_length = strlen(key);

    char* cipher = (char*) malloc(sizeof(char)* (text_length + 1 ));
    memset (cipher, '\0', sizeof(char)* (text_length + 1 ));
    for(int i=0; i < text_length; i++)
    {
        if (isalpha(plaintext[i]))
        {
            int shift =tolower (key[i % key_length])-'a';
            if (islower(plaintext[i]))
            {
            cipher[i] = 'a' + (plaintext[i] - 'a' + shift)% 26;
            }
        else {
            cipher[i] = 'A' + (plaintext[i] - 'A' + shift)% 26;
        }
        }
        else {
            cipher [i] = plaintext [i];
        }
    }
    cipher [text_length] = '\0';
    return cipher;
}



int read_data(char* file, char* data)
{
    FILE *fp = fopen(file, "r");
    if(fp == NULL)
    {
        printf("Error opening file.");
        return EXIT_FAILURE;
    }

    if(fgets(data, MAXN, fp) == NULL)
    {
        printf("Error reading from file.");
        return EXIT_FAILURE;
    }
    fclose(fp);
    return EXIT_SUCCESS;
}




int main()
{

    char text[MAXN];
    scanf("%s", text);

    char key[MAXN];
    scanf("%s", key);

    char* cipher = vigenere_encrypt(text,key);
    printf ("%s", cipher);

    return EXIT_SUCCESS;

}
